/*
Copyright 2020 The KubeSphere Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "kubesphere.io/api/even/v1alpha1"
)

// EvenLister helps list Evens.
// All objects returned here must be treated as read-only.
type EvenLister interface {
	// List lists all Evens in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.Even, err error)
	// Evens returns an object that can list and get Evens.
	Evens(namespace string) EvenNamespaceLister
	EvenListerExpansion
}

// evenLister implements the EvenLister interface.
type evenLister struct {
	indexer cache.Indexer
}

// NewEvenLister returns a new EvenLister.
func NewEvenLister(indexer cache.Indexer) EvenLister {
	return &evenLister{indexer: indexer}
}

// List lists all Evens in the indexer.
func (s *evenLister) List(selector labels.Selector) (ret []*v1alpha1.Even, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Even))
	})
	return ret, err
}

// Evens returns an object that can list and get Evens.
func (s *evenLister) Evens(namespace string) EvenNamespaceLister {
	return evenNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// EvenNamespaceLister helps list and get Evens.
// All objects returned here must be treated as read-only.
type EvenNamespaceLister interface {
	// List lists all Evens in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.Even, err error)
	// Get retrieves the Even from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.Even, error)
	EvenNamespaceListerExpansion
}

// evenNamespaceLister implements the EvenNamespaceLister
// interface.
type evenNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all Evens in the indexer for a given namespace.
func (s evenNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.Even, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Even))
	})
	return ret, err
}

// Get retrieves the Even from the indexer for a given namespace and name.
func (s evenNamespaceLister) Get(name string) (*v1alpha1.Even, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("even"), name)
	}
	return obj.(*v1alpha1.Even), nil
}
